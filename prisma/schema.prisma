generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"

  url      = env("DATABASE_URL")
}

enum Role {
  gestionnaire
  responsable_achat
  responsable_payement
  fournisseur
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  nom       String
  prenom    String
  password  String
  role      Role      @default(fournisseur)
  commandes Commande[]
  produits  Produit[]
  deletedAt      DateTime?  
  
}

model Categorie {
  id             Int            @id @default(autoincrement())
  nom            String         @unique
  sousCategories SousCategorie[]
  actif          Boolean
  deletedAt      DateTime?  
}

model SousCategorie {
  id           Int        @id @default(autoincrement())
  nom          String     @unique
  produits     Produit[]
  categorie    Categorie  @relation(fields: [categorieId], references: [id])
  categorieId  Int
  actif        Boolean
  deletedAt      DateTime?  
}

model Produit {
  id              Int              @id @default(autoincrement())
  nom             String
  sousCategorie   SousCategorie    @relation(fields: [sousCategorieId], references: [id])
  sousCategorieId Int
  designation     String
  quantiteStock   Int
  prixUnitaire    Float
  image           String
  user            User             @relation(fields: [userId], references: [id])
  userId          Int

  // Relation inverse avec DetailCommande
  detailsCommande DetailCommande[]
  deletedAt      DateTime?  
}

enum Etat {
  encours
  livre
  payer
}

model Commande {
  id                  Int              @id @default(autoincrement())
  user                User             @relation(fields: [userId], references: [id])
  userId              Int
  dateCommande        DateTime
  dateLivraison       DateTime
  dateLivraisonReelle DateTime?
  montantTotal        Float
  payements           Payement[]
  etat                Etat             @default(encours)
  details             DetailCommande[]
  deletedAt      DateTime?  
}

model DetailCommande {
  id           Int      @id @default(autoincrement())
  commande     Commande @relation(fields: [commandeId], references: [id])
  commandeId   Int
  produit      Produit  @relation(fields: [produitId], references: [id])
  produitId    Int
  quantite     Int
  prixUnitaire Float
  deletedAt      DateTime?  
}

model Payement {
  id               Int      @id @default(autoincrement())
  montant          Float
  dateVersement    DateTime
  numeroVersement  Int      // 1, 2, ou 3 max
  commande         Commande  @relation(fields: [commandeId], references: [id])
  commandeId       Int
  deletedAt      DateTime?  

  // La contrainte sur numeroVersement (1 à 3) doit être gérée dans le code ou en SQL natif, pas ici.
}